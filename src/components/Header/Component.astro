---
import { getLocaleFromUrl } from '~/lib/i18n';
import { getNavigationData } from '~/lib/navigation'

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

function trimSlash(path: string) {
  return path.replace(/^\/+|\/+$/g, '');
}

const {
  links: propsLinks,
} = Astro.props;

// Get current locale from URL for navigation
const currentLocale = await getLocaleFromUrl(Astro.url);
const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;

// Get available locales for mobile menu
const availableLocales = await import('~/lib/i18n').then((m) => m.default());



const navigationData = await getNavigationData(currentLocale);
const links = navigationData.links.length > 0 ? navigationData.links : propsLinks || [];



---

<header class="top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-[opacity] ease-in-out data-aw-sticky-header">
  <div class="relative text-default py-3 px-3 md:px-6 mx-auto w-full ">
    <nav class="max-w-7xl mx-auto">
      <div class="flex justify-between items-center md:grid md:grid-cols-3 md:items-center">
        <div class="text-xl font-semibold">Logo {currentLocale} s</div>
        <div class="space-x-4">
        <nav class="items-center w-full md:flex md:mx-5 text-default overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:justify-self-center"
        aria-label="Main navigation">
        <ul
          class="flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium md:justify-center"
        >
          {
          links.map(({ text, href, links }: any) => (
            <li class={links?.length ? 'dropdown' : ''}>
              {links?.length ? (
                <>
                  <button
                    type="button"
                    class="hover:text-link dark:hover:text-white px-4 py-3 flex items-center whitespace-nowrap"
                  >
                    {text}{' '}
                    <Icon
                      name="tabler:chevron-down"
                      class="w-3.5 h-3.5 ml-0.5 rtl:ml-0 rtl:mr-0.5 hidden md:inline"
                    />
                  </button>
                  <ul class="dropdown-menu md:backdrop-blur-md dark:md:bg-dark rounded md:absolute pl-4 md:pl-0 md:hidden font-medium md:bg-white/90 md:min-w-[200px] drop-shadow-xl">
                    {links.map(({ text: text2, href: href2 }: any) => (
                      <li>
                        <a
                          class:list={[
                            'first:rounded-t last:rounded-b md:hover:bg-gray-100 hover:text-link dark:hover:text-white dark:hover:bg-gray-700 py-2 px-5 block whitespace-no-wrap',
                            { 'aw-link-active': href2 === currentPath },
                          ]}
                          href={href2}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class:list={[
                    'hover:text-link dark:hover:text-white px-4 py-3 flex items-center whitespace-nowrap',
                    { 'aw-link-active': href === currentPath },
                  ]}
                  href={href}
                >
                  {text}
                </a>
              )}
            </li>
          ))
        }
        </ul>
    </nav>
    
    
  </div>




        <a href="/" class="hover:text-gray-600">EN</a>
        <a href="/it/" class="hover:text-gray-600">IT</a>
      </div>
    </div>
  </nav>
</header>